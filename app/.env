# Domain
# This would be set to the production domain with an env var on deployment
DOMAIN=localhost    #eg: api.venkatesh.com:8080

# Environment: local, staging, production
ENVIRONMENT=local

PROJECT_NAME="Backend API by Venkatesh"
VERSION=1.0.0.1

# Backend
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.venkatesh.com"
#generated using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=
FIRST_SUPERUSER=root
FIRST_SUPERUSER_PASSWORD=root@123!
USERS_OPEN_REGISTRATION=True

# Emails
SMTP_HOST=localhost
SMTP_USER=vbolla
SMTP_PASSWORD=12345!
EMAILS_FROM_EMAIL=info@example.com
SMTP_TLS=True
SMTP_SSL=False
SMTP_PORT=587

# Postgres
POSTGRES_SERVER=localhost
POSTGRES_PORT=5438
POSTGRES_DB=app #new db name created under postgres servers(you can see in pgadmin4)
POSTGRES_USER=postgres  #which you have configured while installing postgreSQL.exe from edb
POSTGRES_PASSWORD=postgres #which you have configured while installing postgreSQL.exe from edb

SENTRY_DSN=

# Configure these with your own Docker registry images
DOCKER_IMAGE_BACKEND=backend

# 60 minutes * 24 hours * 8 days = 11520 min = 8 days in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=11520
EMAIL_RESET_TOKEN_EXPIRE_HOURS=48
API_PREFIX_STR="/api/v2"
DEBUG_LOG=True
DEBUG_LOG_IN_FILE=True
DEBUG_LOG_ON_CONSOLE=True
DEBUG_LOG_FILE_NAME="./logs/backend_debug_log.txt"
